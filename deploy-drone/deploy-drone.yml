---
- name: Deploy drone using docker
  hosts: drone
  remote_user: root
  become: true

  vars_files:
    - vars/main.yml

  # roles:
  #   - angstwad.docker_ubuntu

  tasks:
    - name: pull drone docker image
      docker_image:
        state: present
        force: true
        name: 'drone/drone:{{ drone_version }}'

    - name: pull drone-agent docker image
      docker_image:
        state: present
        force: true
        name: 'drone/agent:{{ drone_version }}'

    - name: run drone client
      docker_container:
        name: drone-server
        image: 'drone/drone:{{ drone_version }}'

        state: started
        restart_policy: always
        recreate: yes

        published_ports:
          - 80:8000
          - 9000:9000
        volumes:
          - /var/lib/drone:/var/lib/drone/
        env:
          DRONE_OPEN: 'true'
          DRONE_HOST: '{{ drone_host }}'
          DRONE_GITHUB: 'true'
          DRONE_GITHUB_CLIENT: '{{ drone_github_client }}'
          DRONE_GITHUB_SECRET: '{{ drone_github_secret }}'
          DRONE_SECRET: '{{ drone_secret }}'
        # networks:
        #   - name: '{{ network_name }}'

    - name: run drone agent
      docker_container:
        name: drone-agent
        image: 'drone/agent:{{ drone_version }}'

        privileged: yes
        state: started
        restart_policy: always
        recreate: yes

        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        env:
          DRONE_SERVER: drone-server:9000
          DRONE_DEBUG: 'true'
          DRONE_SECRET: '{{ drone_secret }}'
        # networks:
        #   - name: '{{ network_name }}'

    - name: create drone docker network
      docker_network:
        name: '{{ network_name }}'
        force: true
        connected:
          - drone-server
          - drone-agent
